{"version":3,"sources":["state-controls/action-types.js","state-controls/actions.js","components/ListOfServices.js","components/Select.js","containers/ServicesBlock.js","containers/updateCalFunc.js","components/ReservedServices.js","containers/ListOfReserved.js","components/MainFom.js","containers/Modal.js","components/FormComponent.js","containers/ReservationForm.js","containers/App.js","state-controls/reducers.js","state-controls/store.js","index.js"],"names":["RESERVE_SERVICE","CANCEL_SERVICE","UPDATE_CALENDAR","SERVICES_DATA_LOADED","FILTER_SERVICE_LIST","TOGGLE_APP_FORM","TOGGLE_MODAL","SEND_SELECTED_DATE_TIME","toggleAppForm","payload","type","types","toggleModal","updateCalendar","ListOfServices","_ref","items","onClick","react_default","a","createElement","className","map","el","index","concat","replace","key","price","company","name","Select","onChange","header","disabled","children","id","value","connect","state","servicesList","filterConditions","filteredServicesList","toFilterServiceList","props","handleChange","e","_e$target","target","Object","objectSpread","defineProperty","serviceTypes","toConsumableArray","Set","Fragment","components_Select","placeholder","components_ListOfServices","elem","data","serviceId","serviceType","updateCalFunc","arr","cond","dates","date","times","time","isBlocked","ReservedServices","List","reservedServices","calendar","dispatch","cancelService","console","log","sorted","sort","b","Date","components_ReservedServices","item","MainForm","ListOfReserved","containers_ServicesBlock","reservedServiceData","filter","ind","length","toUpperCase","FormComponent","cancelClick","reserveClick","displayStyle","handleSelect","disabledTimeSelect","style","display","dataToResForm","selectedDateTime","isModalShown","sendDateTime","reserveService","arrayOfTimesToJSX","_props$dataToResForm","_props$selectedDateTi","serviceAvaliabiltyData","arrayOfDatesToJSX","timesToSelect","containers_Modal","components_FormComponent","App","this","getCalendarData","getServiceListData","resFormShown","containers_ReservationForm","MainFom","React","Component","isReservationFormShown","fetch","then","response","json","initialState","sortByType","sortByName","rootReducer","arguments","undefined","action","assign","initList","nameValue","typeValue","regexName","RegExp","regexType","test","searchFunction","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","render","es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.43c5b1c0.chunk.js","sourcesContent":["export const RESERVE_SERVICE = \"RESERVE_SERVICE\";\nexport const CANCEL_SERVICE = \"CANCEL_SERVICE\";\n\nexport const UPDATE_CALENDAR = \"UPDATE_CALENDAR\";\n\n\nexport const SERVICES_DATA_LOADED = \"SERVICES_DATA_LOADED\";\nexport const CALENDAR_DATA_LOADED = \"CALENDAR_DATA_LOADED\";\n\nexport const FILTER_SERVICE_LIST = \"FILTER_SERVICE_LIST\";\n\nexport const TOGGLE_APP_FORM = \"TOGGLE_APP_FORM\";\nexport const TOGGLE_MODAL = \"TOGGLE_MODAL\";\n\nexport const SEND_SELECTED_DATE_TIME = \"SEND_SELECTED_DATE_TIME\";","import * as types from './action-types';\n\nexport function reserveService(payload) {\n  return { type: types.RESERVE_SERVICE, payload }\n};\n\nexport function cancelService(payload) {\n\n  console.log('id',payload )\n  return { type: types.CANCEL_SERVICE, payload }\n};\n\nexport function toFilterServiceList(payload) {\n  return { type: types.FILTER_SERVICE_LIST, payload }\n};\n\nexport function toggleAppForm(payload) {\n  return { type: types.TOGGLE_APP_FORM, payload }\n};\n\nexport function toggleModal(payload) {\n  return { type: types.TOGGLE_MODAL, payload }\n};\n\nexport function sendDateTime(payload) {\n  return { type: types.SEND_SELECTED_DATE_TIME, payload }\n};\n\nexport function updateCalendar(payload) {\n  return { type: types.UPDATE_CALENDAR, payload }\n};\n\n//Загружаем тестовые данные, лежат на гитхабе.\nexport function getCalendarData() {\n  return function (dispatch) {\n    return fetch(\"https://raw.githubusercontent.com/srgmkv/services-reservation/master/public/dates.json\")\n      .then(response => response.json())\n      .then(json => {\n        dispatch({ type: types.UPDATE_CALENDAR, payload: json });\n      });\n  };\n}\n\nexport function getServiceListData() {\n  return function (dispatch) {\n    return fetch(\"https://raw.githubusercontent.com/srgmkv/services-reservation/master/public/services.json\")\n      .then(response => response.json())\n      .then(json => {\n        dispatch({ type: types.SERVICES_DATA_LOADED, payload: json });\n\n      });\n  };\n}","import React from 'react';\n\n//Компонент представления карточек с загруженными услугами\nconst ListOfServices = ({ items, onClick }) => {\n  return (\n    <div className=\"services-block\">\n      {items.map((el, index) => (\n        <div className={`service-item ${el.type.replace(' ', '')}`} //добавим тип услуги в класс для одинаковой стилизации\n          key={index}\n          onClick={() => onClick(el)}>\n          <div className=\"type\">{el.type}</div>\n          <div className=\"price\"><div>{el.price} &#x20bd;</div></div>\n          <div className=\"company\">{el.company.name}</div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ListOfServices;","import React from 'react';\n\nconst Select = ({ items, name, onChange, header, disabled, children }) => {\n  return (\n    <select id={name} onChange={onChange} disabled={disabled}>\n      <option value={''}>{header}</option>\n      {\n        items.map((el, index) => <option key={index}>{el}</option>)\n      }\n      {children}\n    </select>\n  )\n}\n\nexport default Select;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { toFilterServiceList, toggleAppForm } from '../state-controls/actions';\nimport ListOfServices from '../components/ListOfServices';\nimport Select from '../components/Select';\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tservicesList: state.servicesList,\n\t\tfilterConditions: state.filterConditions,\n\t\tfilteredServicesList: state.filteredServicesList\n\t}\n};\n\n//Компонент-контейнер для полей фильтрации и отрисовки каталога услуг\nconst ServicesBlock = (props) => {\n\n\t// обработка изменения элементов (для фильтрации):\n\t// клик на элемент списка с типом услуг; поле поиска услуги по названию компании.\n\t// По значению данных полей фильтруем отображение услуг\n\tconst handleChange = (e) => {\n\t\tconst { value, id } = e.target;\n\t\t//передаем данные в редьюсер для фильтрации\n\t\tprops.toFilterServiceList({ ...props.filterConditions, [id]: value });\n\t}\n\n\tconst handleClickByServiceItem = (elem) => { //обработка клика по услуге\n\t\tconst data = {\n\t\t\tserviceId: elem.id,\n\t\t\tcompany: elem.company.name,\n\t\t\tserviceType: elem.type\n\t\t}\n\t\tprops.toggleAppForm(data); //передаем объект с данными услуги в редъюсер и для формы бронирования\n\t}\n\n\t// сделам массив уникальный значений типов услуг для дальнейщей фильтрации для селекта\n\tconst serviceTypes = [...new Set(props.servicesList.map(el => el.type))];\n\treturn (\n\t\t<>\n\t\t\t<div className=\"inputs\">\n\t\t\t\t<Select name=\"sortByType\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\theader=\"Sort by type\"\n\t\t\t\t\titems={serviceTypes}\n\t\t\t\t/>\n\n\t\t\t\t<input type=\"text\" id=\"sortByName\" onChange={handleChange} placeholder=\"search by company\" />\n\t\t\t</div>\n\t\t\t<ListOfServices\n\t\t\t\titems={props.filteredServicesList}\n\t\t\t\tonClick={handleClickByServiceItem}\n\t\t\t/>\n\t\t</>\n\t)\n}\n\nexport default connect(mapStateToProps, { toFilterServiceList, toggleAppForm })(ServicesBlock);\n","//Вспомогательная функция для обхода и внесения изменений в календарь свободного для записи времении\n//Используется  при резервировании и отмене бронирования услуги\nconst updateCalFunc = (arr, cond) => {\n  const byTimes = (arr) => {\n    return arr.map(el => {\n      if (el.value === cond.time) {\n        return { isBlocked: !el.isBlocked, value: el.value }\n      }\n      return el;\n    })\n  }\n  const byDate = (arr) => {\n    return arr.map(el => {\n      if (el.date === cond.date) {\n        return { date: el.date, times: byTimes(el.times) }\n      }\n      return el;\n    })\n  }\n  return arr.map(el => {\n    if (el.id === cond.serviceId) {\n      return { id: el.id, dates: byDate(el.dates) }\n    }\n    return el;\n  })\n}\nexport default updateCalFunc;\n","import React from 'react';\n\n// Компонент отображает представление списка забронированных улсуг\nconst ReservedServices = ({ items, onClick }) => {\n\treturn (\n\t\t<div className=\"reserved-services-list\">\n\t\t\t<div id=\"reserved-list-header\">My reservations</div>\n\n\t\t\t{items\n\t\t\t\t.map(el => (\n\t\t\t\t\t<div className=\"reserved-item\" id={el.id}\n\t\t\t\t\t\tkey={el.id}>\n\t\t\t\t\t\t<div className=\"date\"><div>{el.time}</div><div>{el.date.replace(/-/gi, '.')}</div></div>\n\t\t\t\t\t\t<div className=\"type\">{el.serviceType}</div>\n\t\t\t\t\t\t<div className=\"company\">{el.company}</div>\n\t\t\t\t\t\t<div className=\"cancel\" onClick={() => onClick(el)}>cancel</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t))}\n\n\t\t</div>\n\t)\n}\n\nexport default ReservedServices;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { cancelService, updateCalendar } from '../state-controls/actions';\nimport updateCalFunc from './updateCalFunc';\nimport ReservedServices from '../components/ReservedServices';\nimport '../ Styles/ReservedServices.css';\n//Компонент-контейнер содержит логику отрисовки списка заборонированных услуг\n\nconst mapStateToProps = state => {\n\treturn {\n\t\treservedServices: state.reservedServices,\n\t\tcalendar: state.calendar\n\t}\n};\n\nfunction mapDispatchToProps(dispatch) {\n\treturn {\n\t\tcancelService: (value) => dispatch(cancelService(value)),\n\t\tupdateCalendar: (value) => dispatch(updateCalendar(value))\n\t};\n}\n\nconst reservedServiceList = (props) => {\n\t//сортировка зарезервированных улсуг по дате\n\tconst sorted = props.reservedServices.sort((a, b) => new Date(`${a.date} ${a.time}`) - new Date(`${b.date} ${b.time}`))\n\n\tconst removeService = (item) => {\n\t\tprops.cancelService(item.id);\n\t\tprops.updateCalendar(updateCalFunc(props.calendar, item));\n\t}\n\n\treturn (\n\t\t<ReservedServices \n\t\titems={sorted}\n\t\tonClick={removeService}\n\t\t/>\n\t)\n};\n\nconst List = connect(mapStateToProps, mapDispatchToProps)(reservedServiceList);\nexport default List;","import React from 'react';\nimport ServicesBlock from '../containers/ServicesBlock';\nimport List from '../containers/ListOfReserved';\n\nconst MainForm = () => {\n  return (\n    <div className=\"App\">\n      <List />\n      <ServicesBlock />\n    </div>\n  )\n\n}\n\nexport default MainForm;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { toggleModal, toggleAppForm } from '../state-controls/actions';\nimport '../ Styles/Modal.css'\n\nconst mapStateToProps = state => {\n  return {\n    reservedServices: state.reservedServices,\n  }\n};\n//Компонент отображения модального окна, содержит совсем немного логики\nconst Modal = (props) => {\n  //обработчик закрывает модальное окно и форму бронирования\n  const closeForm = () => {\n    props.toggleAppForm();\n    props.toggleModal();\n  }\n\n  //берем из списка резервированных услуг последнюю и передаем эти данные в \n  //модальное окно-уведомление\n  const reservedServiceData = props.reservedServices.filter((el, ind, arr) => el.id === arr.length - 1)[0]\n  return (\n    <div className=\"modal\">\n      <div className=\"modal-container\">\n        <div className=\"modal-header\">You have successfully ordered the next service:</div>\n        <div className=\"info\">\n          <div>{reservedServiceData.serviceType.toUpperCase()} in {reservedServiceData.company}</div>\n          <div>on <span>\n              {reservedServiceData.date.replace(/-/gi, '.')}\n            \n            </span> at <span>{reservedServiceData.time}</span>\n          </div>\n        </div>\n\n        <button onClick={closeForm}>close</button>\n      </div>\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps, { toggleModal, toggleAppForm })(Modal);","import React from 'react';\nimport Select from './Select';\n\n//Компонент отображения формы для записи на услугу\nconst FormComponent = ({\n  cancelClick, reserveClick, displayStyle, handleSelect, dates, times, disabledTimeSelect }) => {\n\n  return (\n    <>\n      <div className=\"reservation-form\" style={displayStyle ? { 'display': 'none' } : null}>\n        <div className=\"form-container\">\n          <div className=\"form-header\">Please, choose time to reserve </div>\n          <div className=\"selects-container\">\n\n            <Select name=\"date\" onChange={handleSelect}\n              header={'choose date'} items={[]}>\n              {dates}\n            </Select>\n\n            <Select name=\"time\" onChange={handleSelect}\n              header={'choose time'} items={[]} disabled={disabledTimeSelect}>\n              {times}\n            </Select>\n          </div>\n          <div className=\"buttons\">\n            <button id=\"cancel\" onClick={cancelClick}>Cancel</button>\n            <button id=\"reserve\" onClick={reserveClick}>Reserve</button>\n          </div>\n        </div>\n      </div>\n\n    </>\n  )\n}\n\nexport default FormComponent;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { toggleAppForm, sendDateTime, reserveService, updateCalendar, toggleModal } from '../state-controls/actions';\nimport updateCalFunc from './updateCalFunc';\nimport Modal from './Modal';\nimport FormComponent from '../components/FormComponent';\nimport '../ Styles/ReservationForm.css'\n\n//  Компонент формы записи на услугу\nconst mapStateToProps = state => { //состояние из стора для текущего компонента\n  return {\n    reservedServices: state.reservedServices,\n    calendar: state.calendar,\n    dataToResForm: state.dataToResForm,\n    selectedDateTime: state.selectedDateTime,\n    servicesList: state.servicesList,\n    isModalShown: state.isModalShown\n  }\n};\n\nfunction mapDispatchToProps(dispatch) { //функции, которые будут передавать значения в редьюсеры\n  return {\n    toggleAppForm: () => dispatch(toggleAppForm()),\n    sendDateTime: (value) => dispatch(sendDateTime(value)),\n    reserveService: (value) => dispatch(reserveService(value)),\n    updateCalendar: (value) => dispatch(updateCalendar(value)),\n    toggleModal: () => dispatch(toggleModal())\n  };\n}\n\n//САМ КОМПОНЕНТ:\nconst ReservationForm = (props) => {\n  //из стейта возьмем значения:\n  const { serviceId, company, serviceType } = props.dataToResForm;\n  const { date, time } = props.selectedDateTime;\n  const id = props.reservedServices.length\n\n  //обработчик селектов: добавляем выбранную дату и время в состояние\n  const handleSelect = e => {\n    const { value, id } = e.target;\n    props.sendDateTime({                // передаем в редъюсер выбранную дату/время\n      ...props.selectedDateTime, [id]: value\n    });\n  };\n\n  //резервируем услугу\n  const reserveTime = () => {\n    const data = {\n      date, time, serviceId, serviceType, company, id\n    }\n\n    if (date && time) { // валидация на заполненность всех полей (дата и время)\n      props.reserveService(data); // обновляем список забронированных услуг\n      props.updateCalendar(updateCalFunc(props.calendar, data)); // обновляем данные в календаре доступных услуг\n      props.toggleModal(); // загружаем модальное окно\n    }\n  };\n\n  //извлекаем данные для списка дат по выбранной услуг, фильтруем календарь\n  const serviceAvaliabiltyData = props.calendar.filter(el => el.id === serviceId)[0].dates\n  const arrayOfDatesToJSX = serviceAvaliabiltyData.map((el, index) => (\n    <option key={index}>{el.date}</option>\n  ))\n\n  //извлекаем данные для списка со временем записи\n  const timesToSelect = serviceAvaliabiltyData.filter(el => el.date === date)[0]\n  let arrayOfTimesToJSX;\n  if (props.selectedDateTime.date) {// проверяем, чтобы список дат был не пуст до передачи в компонент\n    arrayOfTimesToJSX = timesToSelect.times.filter(el => !el.isBlocked)\n      .map((el, index) => (\n        <option key={index}>{el.value}</option>\n      ))\n  }\n\n  return (\n    <>\n      {props.isModalShown && <Modal />}\n\n      <FormComponent\n        cancelClick={props.toggleAppForm}\n        reserveClick={reserveTime}\n        displayStyle={props.isModalShown}\n        handleSelect={handleSelect}\n        dates={arrayOfDatesToJSX}\n        times={arrayOfTimesToJSX}\n        disabledTimeSelect={!props.selectedDateTime.date}\n      />\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReservationForm);","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport MainForm from '../components/MainFom';\nimport ReservationForm from '../containers/ReservationForm';\nimport { getCalendarData, getServiceListData } from '../state-controls/actions';\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tresFormShown: state.isReservationFormShown\n\t}\n};\n\n//Базовый компонент\nclass App extends React.Component {\n//загрузим даннные с информацией об услугах и информацию о доступности их к заказу\n\tcomponentDidMount() {\n\t\tthis.props.getCalendarData();\n\t\tthis.props.getServiceListData();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\"> \n\t\t\t{/*в приложении 2 страницы: главная с инфо об услугах \n\t\t\t и форма бронированияс выбором даты и времени,\n\t\t\t с помощью значения из состояния будем скрывать или показывать их*/}\n\t\t\t\t{this.props.resFormShown ? < ReservationForm /> : <MainForm />}\n\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\t\n\t\n\texport default connect(\n\t\tmapStateToProps,\n\t{getCalendarData, getServiceListData }\n\t\t\t)(App);\n","import * as types from './action-types';\n\nconst initialState = {\n\treservedServices: [],\n\tcalendar: {},\n\tservicesList: [],\n\tfilterConditions: {\n\t\tsortByType: '',\n\t\tsortByName: ''\n\t},\n\tfilteredServicesList: [],\n\tisReservationFormShown: false,\n\tisModalShown: false,\n\tdataToResForm: '',\n\tselectedDateTime:\n\t{\n\t\tdate: '',\n\t\ttime: ''\n\t}\n};\n\n//Редьюсер общий, пока не удалось его разделить, т.к. из разных редьюсеров нужен был доступ \n// к одним ключам стейта. Вышло так, что выбрал ифы вместо свичей.\nfunction rootReducer(state = initialState, action) {\n\n\tif (action.type === types.SEND_SELECTED_DATE_TIME) {\n\t\treturn Object.assign({}, state, {\n\t\t\tselectedDateTime: action.payload\n\t\t});\n\t}\n\n\n\tif (action.type === types.RESERVE_SERVICE) {\n\t\treturn Object.assign({}, state, {\n\t\t\treservedServices: state.reservedServices.concat(action.payload),\n\t\t\tselectedDateTime: { date: '', time: '' },\n\t\t\tfilteredServicesList: state.servicesList\n\n\t\t});\n\t}\n\n\tif (action.type === types.CANCEL_SERVICE) {\n\t\treturn Object.assign({}, state, {\n\t\t\treservedServices: state.reservedServices\n\t\t\t\t.filter(el => el.id !== action.payload)\n\n\t\t});\n\t}\n\n\tif (action.type === types.UPDATE_CALENDAR) {\n\t\treturn Object.assign({}, state, {\n\t\t\tcalendar: action.payload\n\n\t\t});\n\t}\n\n\tif (action.type === types.SERVICES_DATA_LOADED) {\n\t\tconst initList = state.servicesList.concat(action.payload)\n\t\treturn Object.assign({}, state, {\n\t\t\tservicesList: initList,\n\t\t\tfilteredServicesList: initList\n\t\t});\n\t}\n\n\tif (action.type === types.FILTER_SERVICE_LIST) {\n\t\tconst nameValue = action.payload.sortByName;\n\t\tconst typeValue = action.payload.sortByType;\n\n\t\tconst searchFunction = (name, type) => {\n\t\t\tconst regexName = new RegExp(`^${name}`, 'i');\n\t\t\tconst regexType = new RegExp(`^${type}`, 'i');\n\t\t\treturn state.servicesList\n\t\t\t\t.filter(el => regexName.test(el.company.name))\n\t\t\t\t.filter(el => regexType.test(el.type))\n\t\t}\n\n\t\treturn Object.assign({}, state, {\n\t\t\tfilterConditions: action.payload,\n\t\t\tfilteredServicesList: searchFunction(nameValue, typeValue)\n\t\t});\n\t}\n\n\tif (action.type === types.TOGGLE_APP_FORM) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tisReservationFormShown: !state.isReservationFormShown,\n\t\t\tdataToResForm: action.payload || '',\n\t\t\tfilteredServicesList: state.servicesList,\n\t\t\tselectedDateTime: { date: '', time: '' },\n\t\t}\n\t}\n\n\tif (action.type === types.TOGGLE_MODAL) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tisModalShown: !state.isModalShown\n\t\t}\n\t}\n\n\treturn state;\n};\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport thunk from 'redux-thunk';\n\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  storeEnhancers(applyMiddleware(thunk)));\n\nexport default store;","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from \"react-redux\";\n\nimport './ Styles/index.css'\nimport './ Styles/AvailableService.css';\n\nimport App from './containers/App';\nimport store from './state-controls/store';\n\nrender(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root'));"],"sourceRoot":""}